{
    "name": "polidog/todo",
    "type": "project",
    "description": "todo demo application",
    "license": "proprietary",
    "require": {
        "php": ">=7.1.0",
        "bear/package": "^1.8.2",
        "josegonzalez/dotenv": "^2.1",
        "madapaja/twig-module": "^2.0",
        "ray/aura-sql-module": "^1.0",
        "ray/web-form-module": "^0.5.4",
        "ray/identity-value-module": "^0.1.0",
        "koriym/query-locator": "^1.3",
        "koriym/http-constants": "^1.0.1",
        "bear/accept": "^0.1.0",
        "bear/aura-router-module": "^2.0.5",
        "ray/query-module": "^0.4"
    },
    "require-dev": {
        "bear/qatools": "^1.9",
        "phpunit/phpunit": "^7.5",
        "roave/security-advisories": "dev-master",
        "eaglewu/swoole-ide-helper": "dev-master",
        "bear/api-doc": "^0.4",
        "robmorgan/phinx": "^0.11.1"
    },
    "autoload": {
        "psr-4": {
            "Polidog\\Todo\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Polidog\\Todo\\": "tests/"
        }
    },
    "scripts": {
        "setup": [
            "php bin/setup.php"
        ],
        "compile": "bear.compile 'Polidog\\Todo' prod-app ./",
        "doc": "bear.apidoc 'Polidog\\Todo' ./ docs",
        "test": [
            "phpunit"
        ],
        "tests": [
            "@cs",
            "phpmd src,tests text ./phpmd.xml",
            "phpstan analyse -l max src tests -c phpstan.neon --no-progress",
            "@test"
        ],
        "coverage": [
            "php -dzend_extension=xdebug.so phpunit --coverage-text --coverage-html=build/coverage"
        ],
        "cs": [
            "php-cs-fixer fix -v --dry-run",
            "phpcs --standard=phpcs.xml src;"
        ],
        "cs-fix": [
            "php-cs-fixer fix -v",
            "phpcbf src tests"
        ],
        "serve": "php -dzend_extension=xdebug.so -S 127.0.0.1:8080 -t public",
        "app": "php bin/app.php",
        "page": "php bin/page.php",
        "deploy-prod": "cd bin/deploy; php deployer.phar deploy prod",
        "deploy-stage": "cd bin/deploy; php deployer.phar deploy stage"
    },
    "scripts-descriptions": {
        "setup": "Setup the project",
        "compile": "Compile autoload and DI scripts",
        "test": "Run unit tests",
        "tests": "Run tests and quality checks",
        "coverage": "Generate test coverage report",
        "cs": "Checks the coding standard",
        "cs-fix": "Fix the coding standard",
        "serve": "Start php built-in server",
        "app": "Request app resource",
        "page": "Request page resource",
        "deploy-prod": "deploy production",
        "deploy-stage": "deploy stating"
    },
    "config": {
        "process-timeout": 0
    }
}
